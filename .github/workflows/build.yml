name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up CMake
      uses: lukka/get-cmake@v3.26.3
      with:
        cmakeVersion: '3.26.3'  # Исправлено с 'cmake-version' на 'cmakeVersion'

    - name: Install dependencies
      run: sudo apt-get update && sudo apt-get install -y build-essential dpkg-deb

    - name: Configure CMake
      run: cmake -S . -B build

    - name: Build
      run: cmake --build build --config Release

    - name: Set build number
      id: set_build_number  # Добавлен идентификатор
      run: |
        echo "BUILD_NUMBER=${{ github.run_number }}" >> $GITHUB_ENV

    - name: Run program
      run: |
        cd build
        ./helloworld

    - name: Test output
      run: |
        output=$(cd build && ./helloworld)
        echo "$output"
        build_number=$(echo "$output" | head -n 1 | awk '{print $2}')
        if ! [[ "$build_number" =~ ^[0-9]+$ ]]; then
          echo "Build number is not a valid number."
          exit 1
        fi

    - name: Package binary
      run: |
        cd build
        mkdir -p package/DEBIAN
        echo "Package: helloworld" > package/DEBIAN/control
        echo "Version: 0.0.${{ github.run_number }}" >> package/DEBIAN/control
        echo "Section: base" >> package/DEBIAN/control
        echo "Priority: optional" >> package/DEBIAN/control
        echo "Architecture: amd64" >> package/DEBIAN/control
        echo "Maintainer: Your Name <youremail@example.com>" >> package/DEBIAN/control
        echo "Description: Hello World application" >> package/DEBIAN/control
        mkdir -p package/usr/local/bin
        cp helloworld package/usr/local/bin/
        dpkg-deb --build package helloworld-0.0.${{ github.run_number }}-Linux.deb

    - name: Create release
      id: create_release  # Добавлен идентификатор
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}  # Используем github.ref_name вместо github.ref
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/helloworld-0.0.${{ github.run_number }}-Linux.deb
        asset_name: helloworld-0.0.${{ github.run_number }}-Linux.deb
        asset_content_type: application/octet-stream
